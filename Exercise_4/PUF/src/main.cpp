/**
 * Board Serial Number: 85431303636351F02151
 */

#include <Arduino.h>

#define BUF_LEN 256

uint8_t finger_print[] = {0xfb, 0x11, 0xbd, 0xc0, 0xef, 0xfb, 0x7c, 0xf7, 0xf0, 0x1f, 0x9e, 0xfe, 0xfe, 0x97, 0x92, 0xb5, 0x1d, 0x76, 0xaa, 0xde, 0xc0, 0xfd, 0x60, 0xf5, 0x9b, 0xda, 0xdf, 0x84, 0xad, 0x87, 0xad, 0xcf, 0x9c, 0xf1, 0xfc, 0xdb, 0x36, 0xf5, 0x5f, 0x68, 0x9d, 0x8e, 0xcd, 0x9f, 0xb1, 0xfc, 0x7e, 0xe9, 0x77, 0x4c, 0xdd, 0x6f, 0x14, 0x8b, 0x37, 0xec, 0x3f, 0x40, 0x11, 0x8e, 0x7c, 0x6d, 0xaf, 0x79, 0x89, 0xa8, 0x79, 0x79, 0x3f, 0x7e, 0x49, 0xfb, 0x94,
                          0xee, 0x3e, 0xec, 0xdc, 0x46, 0xf1, 0x4a, 0xbd, 0xec, 0xbe, 0x5f, 0xb5, 0xd5, 0xf7, 0x5f, 0x4a, 0x26, 0x27, 0xf3, 0x3e, 0x3d, 0xa9, 0xff, 0xd7, 0x4f, 0x4c, 0x3d, 0x2f, 0x0e, 0x98, 0x36, 0xe7, 0xad, 0xcb, 0xbb, 0xdb, 0x5b, 0xf5, 0x7e, 0xfc, 0xcf, 0xa3, 0xe5, 0x34, 0x5f, 0xff, 0xcd, 0x3d, 0xcf, 0x63, 0x21, 0xdd, 0x3b, 0x73, 0xfb, 0xae, 0x54, 0xe7, 0xfc, 0xd3, 0xd7, 0xb4, 0xfb, 0x0e, 0x77, 0x31, 0x27, 0xcb, 0x57, 0xac, 0x2d, 0xf1, 0x92,
                          0x15, 0xff, 0xb9, 0xaa, 0xab, 0xfa, 0xf1, 0xfb, 0xef, 0x67, 0xfc, 0x6f, 0x9e, 0xdb, 0x3d, 0x7f, 0x34, 0x6a, 0xab, 0x77, 0xd4, 0xf8, 0x3f, 0x0b, 0xba, 0xf3, 0xb5, 0xfd, 0x8b, 0xdd, 0x66, 0xff, 0xbe, 0xc6, 0x5a, 0xbe, 0x77, 0xff, 0xa2, 0x5e, 0xf7, 0xe2, 0xff, 0x7c, 0x75, 0xed, 0x96, 0x85, 0x87, 0x34, 0xed, 0xd9, 0x93, 0x79, 0x0a, 0x2f, 0xa6, 0x39, 0xdd, 0xcf, 0xf6, 0xff, 0x2a, 0x94, 0x6e, 0x9b, 0xaa, 0x6c, 0x06, 0xfb, 0x19, 0xee, 0x5d,
                          0xfc, 0xde, 0xef, 0x78, 0x6f, 0xef, 0xb4, 0xff, 0xdf, 0xb9, 0x75, 0xed, 0xdc, 0x7e, 0xc7, 0xc7, 0x52, 0xbd, 0x3e, 0xfa, 0x5f, 0xa2, 0x6d, 0x96, 0x56, 0xec, 0xe4, 0xcb, 0x5e, 0x93, 0x7f, 0xf0, 0x67, 0xa1, 0x67, 0x16, 0x0c};

unsigned int count_ones(uint8_t byte_in)
{
  unsigned int ret = 0;
  for (int i = 0; i < 8; i++)
  {
    ret += (byte_in >> i) & 1;
  }
  return ret;
}

int check_device_id(uint8_t *stored_image, uint8_t *read_image)
{
  unsigned int count = 0;
  for (int i = 0; i < BUF_LEN; i++)
  {
    count += count_ones(stored_image[i] ^ read_image[i]);
  }
  Serial.print("Ones = ");
  Serial.println(count);
  if (count <= 164)
  {
    return 0;
  }
  else
  {
    return -1;
  }
}

void setup()
{
  uint8_t buff[256];
  unsigned long sum = 0;
  Serial.begin(115200);
  for (size_t i = 0; i < sizeof(buff); i++)
  {
    sum += (unsigned long)(buff[i]);
    char fmt[6];
    sprintf(fmt, "0x%02x, ", buff[i]);
    Serial.print(fmt);
  }
  Serial.println();
  Serial.print("Sum: ");
  Serial.println(sum);
  int check = check_device_id(finger_print, buff);
  if (check == 0)
  {
    Serial.println("Check OK");
  }
  else
  {
    Serial.println("Check FAILED");
  }
}

void loop()
{
  // put your main code here, to run repeatedly:
}